[gd_resource type="VisualShader" load_steps=9 format=2]

[ext_resource path="res://Krita_Imagens/Orc_do_ZÃ©_01.jpg" type="Texture" id=1]
[ext_resource path="res://Krita_Imagens/Alpha token prototype_Mask_Area.png" type="Texture" id=2]
[ext_resource path="res://Krita_Imagens/Alpha token prototype_Ring.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=9]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0, 1, 0.015625, 1 )

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Color:6
	vec3 n_out6p0 = vec3(0.000000, 1.000000, 0.015625);
	float n_out6p1 = 1.000000;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorScalarMix:5
	vec3 n_out5p0 = mix(n_out2p0, n_out6p0, n_out4p1);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -411, 133 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 160 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -440, 100 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 40, 460 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -420, 500 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 0, 200 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( -380, 360 )
nodes/fragment/connections = PoolIntArray( 3, 1, 0, 1, 4, 1, 5, 2, 6, 0, 5, 1, 2, 0, 5, 0, 5, 0, 0, 0 )
