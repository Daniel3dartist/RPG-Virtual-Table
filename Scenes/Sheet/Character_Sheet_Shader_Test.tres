[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://Base_Images/Char_Base_Image.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.549864, 0.549864, 0.549864, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=11]
output_port_for_preview = 0
operator = 3

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Color:4
	vec3 n_out4p0 = vec3(0.549864, 0.549864, 0.549864);
	float n_out4p1 = 1.000000;

// ColorOp:5
	vec3 n_out5p0 = max(n_out2p0, n_out4p0);

// Output:0
	COLOR.rgb = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -400.726, 87.2349 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 440, 240 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -240, 120 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -220, 360 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( 120, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 4, 0, 5, 1, 5, 0, 0, 0 )
