[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://Base_Images/Char_Base_Image.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVec3Constant" id=14]
constant = Vector3( 0.2, 0.1, 0 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.549864, 0.549864, 0.549864, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=11]
output_port_for_preview = 0
operator = 3

[sub_resource type="VisualShaderNodeVectorScalarMix" id=12]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 1.0 ]

[sub_resource type="VisualShaderNodeTexture" id=13]

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Color:4
	vec3 n_out4p0 = vec3(0.549864, 0.549864, 0.549864);
	float n_out4p1 = 1.000000;

// ColorOp:5
	vec3 n_out5p0 = max(n_out2p0, n_out4p0);

// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// Vector:10
	vec3 n_out10p0 = vec3(0.200000, 0.100000, 0.000000);

// VectorOp:8
	vec3 n_out8p0 = n_out9p0 + n_out10p0;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out8p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// VectorScalarMix:6
	float n_in6p2 = 1.00000;
	vec3 n_out6p0 = mix(n_out5p0, n_out7p0, n_in6p2);

// Output:0
	COLOR.rgb = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -459.267, 262.892 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 820, 120 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -260, 100 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -220, 360 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( 120, 120 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( 520, 160 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( 80, 360 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( -180, 500 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( -420, 520 )
nodes/fragment/10/node = SubResource( 14 )
nodes/fragment/10/position = Vector2( -600, 600 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 4, 0, 5, 1, 7, 0, 6, 1, 5, 0, 6, 0, 6, 0, 0, 0, 9, 0, 8, 0, 8, 0, 7, 0, 10, 0, 8, 1 )
