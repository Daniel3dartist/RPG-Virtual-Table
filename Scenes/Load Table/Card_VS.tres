[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://Base_Images/Table_Base_Image_d6_5.png" type="Texture" id=1]
[ext_resource path="res://Base_Images/Table_Base_Image_d6_6.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.882801, 0.892904, 0.296066, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 1.0 ]

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=4]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 1.0 ]

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 2 )

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_9;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Color:10
	vec3 n_out10p0 = vec3(0.882801, 0.892904, 0.296066);
	float n_out10p1 = 1.000000;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// VectorScalarMix:8
	vec3 n_out8p0 = mix(n_out10p0, n_out9p0, n_out9p1);

// TextureUniform:12
	vec3 n_out12p0;
	float n_out12p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out12p0 = n_tex_read.rgb;
		n_out12p1 = n_tex_read.a;
	}

// VectorScalarMix:11
	float n_in11p2 = 1.00000;
	vec3 n_out11p0 = mix(n_out8p0, n_out12p0, n_in11p2);

// Output:0
	COLOR.rgb = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 25.1164, -486.599 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 20 )
nodes/fragment/6/node = SubResource( 2 )
nodes/fragment/6/position = Vector2( -873.964, 2437.7 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( -873.964, 3064.76 )
nodes/fragment/8/node = SubResource( 4 )
nodes/fragment/8/position = Vector2( 140, -20 )
nodes/fragment/9/node = SubResource( 5 )
nodes/fragment/9/position = Vector2( -340, 80 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -280, -80 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( 460, 0 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 120, 220 )
nodes/fragment/connections = PoolIntArray( 9, 1, 8, 2, 9, 0, 8, 1, 10, 0, 8, 0, 11, 0, 0, 0, 8, 0, 11, 0, 12, 0, 11, 1 )
